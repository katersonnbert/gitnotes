CSS
===


LESS
====

less files require the metadata tags:
	fileExtension='.less'
	mimeType='text/css'


HTML5
=====


JSON (Java Script Object Notation)
==================================
http://www.w3schools.com/json/default.asp

Data format for information exchange between applications. Every valid JSON document should be valid javascript and be interpretable by eval(). The default character set is utf-8.
In its syntax its similar to XML, but reduces some of the overhead.


###The main differences and similarites comparted to XML are:
- both JSON and XML are plain text, human readable, hierarchical and can be fetched by httpRequest
- JSON has no end tags, can use arrays
- JSON is parsed by the standard JavaScript parser or custom functions even within a page, XML requires its own parser before its converted to e.g. HTML.

###JSON files
- the file type is ".json"
- the MIME type is "application/json"


###JSON values can be
- null
- number (integer & floating point)
- string ... ""
- arrays ... []
- objects ... {}


###The JSON syntax defines the following main rules:
- strings are always in double quotes
- data is in name:value pairs, separated by a colon
	"firstName":"Blaubaer"
- data is separated by commas
- curly braces hold objects
-- objects can hold multiple name:value pairs
	{"firstName":"Abdul", "lastName":"Nachtigaller"}
- square brackets hold arrays, arrays can hold multiple objects
	"litCharacters": [
		{"firstName":"Abdul", "lastName":"Nachtigaller"},
		{"firstName":"Randolp", "lastName":"Carter"},
		{"firstName":"Arlen", "lastName":"Bales"}
	]


###JSON uses JavaScript syntax
JSON objects can be accessed using JavaScript

	var litCharacters = [
		{"firstName":"Abdul", "lastName":"Nachtigaller"},
		{"firstName":"Randolp", "lastName":"Carter"},
		{"firstName":"Arlen", "lastName":"Bales"}
	];

	litCharacters[0].firstName +" "+ litCharacters[0].lastName;
	litCharacters[0].firstName = "Dr. Abdul";


###JSON object from string
To convert a JSON string to a JSON object, the JavaScript function JSON.parse() is used, this object can in turn be used within the web page.

	var text = '{ "litCharacters" : = [' +
		'{"firstName":"Abdul", "lastName":"Nachtigaller"},' +
		'{"firstName":"Randolp", "lastName":"Carter"},' +
		'{"firstName":"Arlen", "lastName":"Bales"} ]}';

	var obj = JSON.parse(text);
	<p id="demo"></p>
	<script>
	document.getElementById("demo").innerHTML =
	obj.litCharacters[1].firstName +" "+ obj.litCharacters[1].lastName;
	</script>





